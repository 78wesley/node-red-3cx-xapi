{
    "Xapi": {
        "label": {
            "service": "服务",
            "method": "方法",
            "host": "网络主机",
            "header": "字头段",
            "value": "值",
            "isQuery": "查询"
        },
        "status": {
            "requesting": "请求中"
        },
        "parameters": {
            "ListActiveCall": "GET /ActiveCalls",
            "top": "$top",
            "skip": "$skip",
            "search": "$search",
            "filter": "$filter",
            "count": "$count",
            "orderby": "$orderby",
            "select": "$select",
            "expand": "$expand",
            "DropCall": "POST /ActiveCalls({Id})/Pbx.DropCall",
            "id": "Id",
            "GetFilter": "GET /ActivityLog/Pbx.GetFilter()",
            "GetLogs": "GET /ActivityLog/Pbx.GetLogs(extension={extension},call={call},search={search},severity={severity},top={top},skip={skip})",
            "extension": "extension",
            "call": "call",
            "severity": "severity",
            "PurgeLogs": "POST /ActivityLog/Pbx.PurgeLogs",
            "GetAntiHackingSettings": "GET /AntiHackingSettings",
            "UpdateAntiHackingSettings": "PATCH /AntiHackingSettings",
            "body": "body",
            "ListBackups": "GET /Backups",
            "GetBackupExtras": "GET /Backups({FileName})/Pbx.GetBackupExtras()",
            "fileName": "fileName",
            "DeleteBackups": "DELETE /Backups({FileName})",
            "ifMatch": "If-Match",
            "Restore": "POST /Backups({FileName})/Pbx.Restore",
            "Backup": "POST /Backups/Pbx.Backup",
            "GetCanCreateBackup": "GET /Backups/Pbx.GetCanCreateBackup()",
            "GetBackupSettings": "GET /Backups/Pbx.GetBackupSettings()",
            "GetBackupFailoverSettings": "GET /Backups/Pbx.GetBackupFailoverSettings()",
            "SetBackupFailoverSettings": "POST /Backups/Pbx.SetBackupFailoverSettings",
            "GetFailoverScripts": "GET /Backups/Pbx.GetFailoverScripts()",
            "SetBackupSettings": "POST /Backups/Pbx.SetBackupSettings",
            "GetBackupRepositorySettings": "GET /Backups/Pbx.GetBackupRepositorySettings()",
            "SetBackupRepositorySettings": "POST /Backups/Pbx.SetBackupRepositorySettings",
            "GetRestoreSettings": "GET /Backups/Pbx.GetRestoreSettings()",
            "SetRestoreSettings": "POST /Backups/Pbx.SetRestoreSettings",
            "ListBlackListNumber": "GET /BlackListNumbers",
            "CreateBlackListNumber": "POST /BlackListNumbers",
            "GetBlackListNumber": "GET /BlackListNumbers({Id})",
            "UpdateBlackListNumber": "PATCH /BlackListNumbers({Id})",
            "DeleteBlackListNumber": "DELETE /BlackListNumbers({Id})",
            "BulkNumbersDelete": "POST /BlackListNumbers/Pbx.BulkNumbersDelete",
            "ListBlocklistAddr": "GET /Blocklist",
            "CreateBlocklistAddr": "POST /Blocklist",
            "GetBlocklistAddr": "GET /Blocklist({Id})",
            "UpdateBlocklistAddr": "PATCH /Blocklist({Id})",
            "DeleteBlocklistAddr": "DELETE /Blocklist({Id})",
            "BulkIpsDelete": "POST /Blocklist/Pbx.BulkIpsDelete",
            "ListCallCostSettings": "GET /CallCostSettings",
            "UpdateCost": "POST /CallCostSettings/Pbx.UpdateCost",
            "ExportCallCosts": "GET /CallCostSettings/Pbx.ExportCallCosts()",
            "GetCallFlowApp": "GET /CallFlowApps({Id})",
            "UpdateCallFlowApp": "PATCH /CallFlowApps({Id})",
            "DeleteCallFlowApp": "DELETE /CallFlowApps({Id})",
            "ListCallFlowApp": "GET /CallFlowApps",
            "CreateCallFlowApp": "POST /CallFlowApps",
            "GetAudioFiles": "GET /CallFlowApps({Id})/Pbx.GetAudioFiles()",
            "DeleteAudioFile": "POST /CallFlowApps({Id})/Pbx.DeleteAudioFile",
            "DownloadCallHistory": "GET /CallHistoryView/Pbx.DownloadCallHistory()",
            "ListCallHistoryView": "GET /CallHistoryView",
            "GetCallParkingSettings": "GET /CallParkingSettings",
            "UpdateCallParkingSettings": "PATCH /CallParkingSettings",
            "GetCallTypesSettings": "GET /CallTypesSettings",
            "UpdateCallTypesSettings": "PATCH /CallTypesSettings",
            "GetCDRSettings": "GET /CDRSettings",
            "UpdateCDRSettings": "PATCH /CDRSettings",
            "DownloadChatHistory": "GET /ChatHistoryView/Pbx.DownloadChatHistory(clientTimeZone={clientTimeZone})",
            "clientTimeZone": "clientTimeZone",
            "ListChatHistoryView": "GET /ChatHistoryView",
            "GetChatLogSettings": "GET /ChatLogSettings",
            "UpdateChatLogSettings": "PATCH /ChatLogSettings",
            "DownloadChatMessagesHistory": "GET /ChatMessagesHistoryView/Pbx.DownloadChatMessagesHistory(clientTimeZone={clientTimeZone})",
            "ListChatMessagesHistoryView": "GET /ChatMessagesHistoryView",
            "GetCodecsSettings": "GET /CodecsSettings",
            "UpdateCodecsSettings": "PATCH /CodecsSettings",
            "GetWebMeetingZones": "GET /ConferenceSettings/Pbx.GetWebMeetingZones()",
            "GenerateApiKey": "GET /ConferenceSettings/Pbx.GenerateApiKey()",
            "GetConferenceSettings": "GET /ConferenceSettings",
            "UpdateConferenceSettings": "PATCH /ConferenceSettings",
            "GetMCURequestStatus": "GET /ConferenceSettings/Pbx.GetMCURequestStatus()",
            "GetOnboardMcuData": "GET /ConferenceSettings/Pbx.GetOnboardMcuData()",
            "GetOnboardMeetings": "GET /ConferenceSettings/Pbx.GetOnboardMeetings()",
            "GetMCURows": "GET /ConferenceSettings/Pbx.GetMCURows()",
            "GetMCURow": "GET /ConferenceSettings/Pbx.GetMCURow(guid={guid})",
            "guid": "guid",
            "UpdateMCURequestStatus": "POST /ConferenceSettings/Pbx.UpdateMCURequestStatus",
            "GetConsoleRestrictions": "GET /ConsoleRestrictions",
            "UpdateConsoleRestrictions": "PATCH /ConsoleRestrictions",
            "ListContact": "GET /Contacts",
            "CreateContact": "POST /Contacts",
            "SetDirSearchSettings": "POST /Contacts/Pbx.SetDirSearchSettings",
            "GetDirSearchSettings": "GET /Contacts/Pbx.GetDirSearchSettings()",
            "BatchContactsDelete": "POST /Contacts/Pbx.BatchContactsDelete",
            "Office365ContactsBulkDelete": "POST /Contacts/Pbx.Office365ContactsBulkDelete",
            "CRMContactsBulkDelete": "POST /Contacts/Pbx.CRMContactsBulkDelete",
            "AllContactsBulkDelete": "POST /Contacts/Pbx.AllContactsBulkDelete",
            "ExportContacts": "GET /Contacts/Pbx.ExportContacts()",
            "GetContact": "GET /Contacts({Id})",
            "UpdateContact": "PATCH /Contacts({Id})",
            "DeleteContact": "DELETE /Contacts({Id})",
            "ListCountry": "GET /Countries",
            "GetCountryCodes": "GET /CountryCodes",
            "UpdateCountryCodes": "PATCH /CountryCodes",
            "GetCrmIntegration": "GET /CrmIntegration",
            "UpdateCrmIntegration": "PATCH /CrmIntegration",
            "Test": "POST /CrmIntegration/Pbx.Test",
            "DeleteCrmContacts": "POST /CrmIntegration/Pbx.DeleteCrmContacts",
            "SetOAuthState": "POST /CrmIntegration/Pbx.SetOAuthState",
            "GetOAuth": "GET /CrmIntegration/Pbx.GetOAuth(variable={variable})",
            "variable": "variable",
            "GetCrmTemplateSource": "GET /CrmIntegration/Pbx.GetCrmTemplateSource(name={name})",
            "name": "Name",
            "GeCrmtTemplates": "GET /CrmTemplates/Pbx.GeCrmtTemplates()",
            "GetCrmTemplate": "GET /CrmTemplates({Name})",
            "DeleteCrmTemplate": "DELETE /CrmTemplates({Name})",
            "ListCustomPrompt": "GET /CustomPrompts",
            "DeleteCustomPrompt": "DELETE /CustomPrompts({Filename})",
            "filename": "Filename",
            "GetDefs": "GET /Defs",
            "ListCodecs": "GET /Defs/Codecs",
            "ListGatewayParameters": "GET /Defs/GatewayParameters",
            "ListGatewayParameterValues": "GET /Defs/GatewayParameterValues",
            "ListTimeZones": "GET /Defs/TimeZones",
            "GetSystemParameters": "GET /Defs/Pbx.GetSystemParameters()",
            "HasSystemOwner": "GET /Defs/Pbx.HasSystemOwner()",
            "GetRoutes": "POST /Defs/Pbx.GetRoutes",
            "ListDeviceInfo": "GET /DeviceInfos",
            "GetDeviceInfo": "GET /DeviceInfos({Id})",
            "DeleteDeviceInfo": "DELETE /DeviceInfos({Id})",
            "Provision": "POST /DeviceInfos({Id})/Pbx.Provision",
            "GetDialCodeSettings": "GET /DialCodeSettings",
            "UpdateDialCodeSettings": "PATCH /DialCodeSettings",
            "ListDidNumber": "GET /DidNumbers",
            "GetPropertiesByDn": "GET /DNProperties/Pbx.GetPropertiesByDn(dnNumber={dnNumber})",
            "dnNumber": "dnNumber",
            "CreateDNProperty": "POST /DNProperties/Pbx.CreateDNProperty",
            "UpdateDNProperty": "POST /DNProperties/Pbx.UpdateDNProperty",
            "DeleteDNProperty": "POST /DNProperties/Pbx.DeleteDNProperty",
            "GetDNPropertyByName": "GET /DNProperties/Pbx.GetDNPropertyByName(dnNumber={dnNumber},name={name})",
            "GetE164Settings": "GET /E164Settings",
            "UpdateE164Settings": "PATCH /E164Settings",
            "ListEmailTemplate": "GET /EmailTemplate",
            "GetEmailTemplate": "GET /EmailTemplate({TemplatePath})",
            "templatePath": "TemplatePath",
            "UpdateEmailTemplate": "PATCH /EmailTemplate({TemplatePath})",
            "SetDefault": "POST /EmailTemplate({TemplatePath})/Pbx.SetDefault",
            "GetEmergencyNotificationsSettings": "GET /EmergencyNotificationsSettings",
            "UpdateEmergencyNotificationsSettings": "PATCH /EmergencyNotificationsSettings",
            "ListEventLog": "GET /EventLogs",
            "DownloadEventLogs": "GET /EventLogs/Pbx.DownloadEventLogs()",
            "PurgeEventLog": "POST /EventLogs/Pbx.PurgeEventLog",
            "InitFax": "GET /Fax/Pbx.InitFax()",
            "ListFax": "GET /Fax",
            "CreateFax": "POST /Fax",
            "GetFax": "GET /Fax({Id})",
            "UpdateFax": "PATCH /Fax({Id})",
            "DeleteFax": "DELETE /Fax({Id})",
            "BulkFaxDelete": "POST /Fax/Pbx.BulkFaxDelete",
            "GetFaxByNumber": "GET /Fax/Pbx.GetByNumber(number={number})",
            "number": "number",
            "GetFaxServerSettings": "GET /FaxServerSettings",
            "UpdateFaxServerSettings": "PATCH /FaxServerSettings",
            "GetFaxFilesSize": "GET /FaxServerSettings/Pbx.GetFaxFilesSize()",
            "CleanUpFax": "POST /FaxServerSettings/Pbx.CleanUpFax",
            "GetFirewallState": "GET /Firewall",
            "GetLastResult": "GET /Firewall/Pbx.GetLastResult()",
            "StartCheck": "POST /Firewall/Pbx.StartCheck",
            "StopCheck": "POST /Firewall/Pbx.StopCheck",
            "GetFirmwareState": "GET /Firmware",
            "CleanUp": "POST /Firmware/Pbx.CleanUp",
            "ListFxs": "GET /Fxs",
            "CreateFxs": "POST /Fxs",
            "GetFxs": "GET /Fxs({MacAddress})",
            "macAddress": "MacAddress",
            "UpdateFxs": "PATCH /Fxs({MacAddress})",
            "DeleteFxs": "DELETE /Fxs({MacAddress})",
            "ListFxsTemplate": "GET /FxsTemplates",
            "CreateFxsTemplate": "POST /FxsTemplates",
            "GetFxsTemplate": "GET /FxsTemplates({Id})",
            "UpdateFxsTemplate": "PATCH /FxsTemplates({Id})",
            "DeleteFxsTemplate": "DELETE /FxsTemplates({Id})",
            "GetGeneralSettingsForApps": "GET /GeneralSettingsForApps",
            "UpdateGeneralSettingsForApps": "PATCH /GeneralSettingsForApps",
            "GetGeneralSettingsForPbx": "GET /GeneralSettingsForPbx",
            "UpdateGeneralSettingsForPbx": "PATCH /GeneralSettingsForPbx",
            "GetGoogleSettings": "GET /GoogleSettings",
            "UpdateGoogleSettings": "PATCH /GoogleSettings",
            "GetGroup": "GET /Groups({Id})",
            "UpdateGroup": "PATCH /Groups({Id})",
            "DeleteGroup": "DELETE /Groups({Id})",
            "ListGroup": "GET /Groups",
            "CreateGroup": "POST /Groups",
            "GetRestrictions": "GET /Groups({Id})/Pbx.GetRestrictions()",
            "DeleteCompanyByNumber": "POST /Groups/Pbx.DeleteCompanyByNumber",
            "DeleteCompanyById": "POST /Groups/Pbx.DeleteCompanyById",
            "ListMembers": "GET /Groups({Id})/Members",
            "ListRights": "GET /Groups({Id})/Rights",
            "ReplaceGroupLicenseKey": "POST /Groups/Pbx.ReplaceGroupLicenseKey",
            "LinkGroupPartner": "POST /Groups/Pbx.LinkGroupPartner",
            "UnlinkGroupPartner": "POST /Groups/Pbx.UnlinkGroupPartner",
            "GetHotelServices": "GET /HotelServices",
            "UpdateHotelServices": "PATCH /HotelServices",
            "ListInboundRule": "GET /InboundRules",
            "CreateInboundRule": "POST /InboundRules",
            "GetInboundRule": "GET /InboundRules({Id})",
            "UpdateInboundRule": "PATCH /InboundRules({Id})",
            "DeleteInboundRule": "DELETE /InboundRules({Id})",
            "BulkInboundRulesDelete": "POST /InboundRules/Pbx.BulkInboundRulesDelete",
            "GetLicenseInfo": "GET /LicenseInfo",
            "ReplaceLicenseKey": "POST /LicenseInfo/Pbx.ReplaceLicenseKey",
            "EditLicenseInfo": "POST /LicenseInfo/Pbx.EditLicenseInfo",
            "RefreshLicenseStatus": "POST /LicenseStatus/Pbx.RefreshLicenseStatus",
            "GetLicenseStatus": "GET /LicenseStatus",
            "UnlinkPartner": "POST /LicenseStatus/Pbx.UnlinkPartner",
            "LinkPartner": "POST /LicenseStatus/Pbx.LinkPartner",
            "PartnerInfo": "GET /LicenseStatus/Pbx.PartnerInfo(resellerId={resellerId})",
            "resellerId": "resellerId",
            "GetLoggingSettings": "GET /LoggingSettings",
            "UpdateLoggingSettings": "PATCH /LoggingSettings",
            "TestSubscription": "GET /Microsoft365Integration/Pbx.TestSubscription()",
            "GetMicrosoft365Integration": "GET /Microsoft365Integration",
            "UpdateMicrosoft365Integration": "PATCH /Microsoft365Integration",
            "AuthorizePresence": "POST /Microsoft365Integration/Pbx.AuthorizePresence",
            "TestPresence": "POST /Microsoft365Integration/Pbx.TestPresence",
            "DeauthorizePresence": "POST /Microsoft365Integration/Pbx.DeauthorizePresence",
            "GetMicrosoftAccessToken": "GET /Microsoft365Integration/Pbx.GetMicrosoftAccessToken()",
            "GetMicrosoft365Directory": "GET /Microsoft365Integration/Pbx.GetMicrosoft365Directory()",
            "GetUsers": "POST /Microsoft365Integration/Pbx.GetUsers",
            "GetUsersByPrincipalNames": "POST /Microsoft365Integration/Pbx.GetUsersByPrincipalNames",
            "GetMicrosoft365TeamsIntegration": "GET /Microsoft365TeamsIntegration",
            "UpdateMicrosoft365TeamsIntegration": "PATCH /Microsoft365TeamsIntegration",
            "CheckFqdnRecord": "GET /Microsoft365TeamsIntegration/Pbx.CheckFqdnRecord(fqdn={fqdn})",
            "fqdn": "fqdn",
            "GetDialPlanScript": "GET /Microsoft365TeamsIntegration/Pbx.GetDialPlanScript()",
            "GetMapUsersScript": "GET /Microsoft365TeamsIntegration/Pbx.GetMapUsersScript()",
            "CheckMapUsersScript": "GET /Microsoft365TeamsIntegration/Pbx.CheckMapUsersScript()",
            "GetMusicOnHoldSettings": "GET /MusicOnHoldSettings",
            "UpdateMusicOnHoldSettings": "PATCH /MusicOnHoldSettings",
            "GetMyGroup": "GET /MyGroup",
            "UpdateMyGroup": "PATCH /MyGroup",
            "ListMyGroupMembers": "GET /MyGroup/Members",
            "ListMyGroupRights": "GET /MyGroup/Rights",
            "GetMyGroupRestrictions": "GET /MyGroup/Pbx.GetRestrictions()",
            "ReplaceMyGroupLicenseKey": "POST /MyGroup/Pbx.ReplaceMyGroupLicenseKey",
            "GetMyGroupPartnerInfo": "GET /MyGroup/Pbx.GetMyGroupPartnerInfo(resellerId={resellerId})",
            "UnlinkMyGroupPartner": "POST /MyGroup/Pbx.UnlinkMyGroupPartner",
            "LinkMyGroupPartner": "POST /MyGroup/Pbx.LinkMyGroupPartner",
            "ListRefreshToken": "GET /MyTokens",
            "RevokeToken": "POST /MyTokens({Id})/Pbx.RevokeToken",
            "GetMyUser": "GET /MyUser",
            "UpdateMyUser": "PATCH /MyUser",
            "ListMyUserGroups": "GET /MyUser/Groups",
            "ListMyUserForwardingProfiles": "GET /MyUser/ForwardingProfiles",
            "ListMyUserGreetings": "GET /MyUser/Greetings",
            "MyUserGenerateProvLink": "GET /MyUser/Pbx.GenerateProvLink()",
            "ListNetworkInterface": "GET /NetworkInterfaces",
            "GetNetworkSettings": "GET /NetworkSettings",
            "UpdateNetworkSettings": "PATCH /NetworkSettings",
            "GetIfaces": "GET /NetworkSettings/Pbx.GetIfaces()",
            "GetNotificationSettings": "GET /NotificationSettings",
            "UpdateNotificationSettings": "PATCH /NotificationSettings",
            "TestEmail": "POST /NotificationSettings/Pbx.TestEmail",
            "GetOfficeHours": "GET /OfficeHours",
            "UpdateOfficeHours": "PATCH /OfficeHours",
            "GetOutboundRule": "GET /OutboundRules({Id})",
            "UpdateOutboundRule": "PATCH /OutboundRules({Id})",
            "DeleteOutboundRule": "DELETE /OutboundRules({Id})",
            "ListOutboundRule": "GET /OutboundRules",
            "CreateOutboundRule": "POST /OutboundRules",
            "GetEmergencyOutboundRules": "GET /OutboundRules/Pbx.GetEmergencyOutboundRules()",
            "Purge": "POST /OutboundRules/Pbx.Purge",
            "MoveUpDown": "POST /OutboundRules/Pbx.MoveUpDown",
            "GetParameterByName": "GET /Parameters/Pbx.GetParameterByName(name={name})",
            "ListParameter": "GET /Parameters",
            "CreateParameter": "POST /Parameters",
            "GetParameter": "GET /Parameters({Id})",
            "UpdateParameter": "PATCH /Parameters({Id})",
            "DeleteParameter": "DELETE /Parameters({Id})",
            "ListParkingGroups": "GET /Parkings({Id})/Groups",
            "GetByNumber": "GET /Parkings/Pbx.GetByNumber(number={number})",
            "ListParking": "GET /Parkings",
            "CreateParking": "POST /Parkings",
            "GetParking": "GET /Parkings({Id})",
            "UpdateParking": "PATCH /Parkings({Id})",
            "DeleteParking": "DELETE /Parkings({Id})",
            "ListPeer": "GET /Peers",
            "GetPeerByNumber": "GET /Peers/Pbx.GetPeerByNumber(number={number})",
            "GetReportPeers": "GET /Peers/Pbx.GetReportPeers()",
            "GetPhoneBookSettings": "GET /PhoneBookSettings",
            "UpdatePhoneBookSettings": "PATCH /PhoneBookSettings",
            "ListPhoneLogo": "GET /PhoneLogos",
            "DeletePhoneLogo": "DELETE /PhoneLogos({Filename})",
            "GetPhonesSettings": "GET /PhonesSettings",
            "UpdatePhonesSettings": "PATCH /PhonesSettings",
            "ListPhoneTemplate": "GET /PhoneTemplates",
            "CreatePhoneTemplate": "POST /PhoneTemplates",
            "GetPhoneTemplate": "GET /PhoneTemplates({Id})",
            "UpdatePhoneTemplate": "PATCH /PhoneTemplates({Id})",
            "DeletePhoneTemplate": "DELETE /PhoneTemplates({Id})",
            "ListPlaylist": "GET /Playlists",
            "CreatePlaylist": "POST /Playlists",
            "GetPlaylist": "GET /Playlists({Name})",
            "UpdatePlaylist": "PATCH /Playlists({Name})",
            "DeletePlaylist": "DELETE /Playlists({Name})",
            "DeletePlaylistFile": "POST /Playlists/Pbx.DeletePlaylistFile",
            "DownloadPlaylistFile": "GET /Playlists/Pbx.DownloadPlaylistFile(playlistKey={playlistKey},fileName={fileName})",
            "playlistKey": "playlistKey",
            "ListPromptSet": "GET /PromptSets",
            "GetPromptSet": "GET /PromptSets({Id})",
            "UpdatePromptSet": "PATCH /PromptSets({Id})",
            "DeletePromptSet": "DELETE /PromptSets({Id})",
            "GetActive": "GET /PromptSets/Pbx.GetActive()",
            "ListPrompts": "GET /PromptSets({Id})/Prompts",
            "SetActive": "POST /PromptSets({Id})/Pbx.SetActive",
            "SetAlternatePronunciation": "POST /PromptSets({Id})/Pbx.SetAlternatePronunciation",
            "Copy": "POST /PromptSets({Id})/Pbx.Copy",
            "PlayPrompt": "POST /PromptSets({Id})/Pbx.PlayPrompt",
            "RecordPrompt": "POST /PromptSets({Id})/Pbx.RecordPrompt",
            "PurgeCalls": "POST /PurgeCalls",
            "PurgeChats": "POST /PurgeChats",
            "ListAgents": "GET /Queues({Id})/Agents",
            "ListManagers": "GET /Queues({Id})/Managers",
            "ResetQueueStatistics": "POST /Queues({Id})/Pbx.ResetQueueStatistics",
            "GetFirstAvailableQueueNumber": "GET /Queues/Pbx.GetFirstAvailableQueueNumber()",
            "GetQueueByNumber": "GET /Queues/Pbx.GetByNumber(number={number})",
            "ListQueue": "GET /Queues",
            "CreateQueue": "POST /Queues",
            "GetQueue": "GET /Queues({Id})",
            "UpdateQueue": "PATCH /Queues({Id})",
            "DeleteQueue": "DELETE /Queues({Id})",
            "ListForwards": "GET /Receptionists({Id})/Forwards",
            "GetFirstAvailableReceptionistNumber": "GET /Receptionists/Pbx.GetFirstAvailableReceptionistNumber()",
            "GetReceptionistByNumber": "GET /Receptionists/Pbx.GetByNumber(number={number})",
            "ListReceptionist": "GET /Receptionists",
            "CreateReceptionist": "POST /Receptionists",
            "GetReceptionist": "GET /Receptionists({Id})",
            "UpdateReceptionist": "PATCH /Receptionists({Id})",
            "DeleteReceptionist": "DELETE /Receptionists({Id})",
            "ListRecording": "GET /Recordings",
            "DownloadRecording": "GET /Recordings/Pbx.DownloadRecording(recId={recId})",
            "recId": "recId",
            "GetRecordingRepositorySettings": "GET /Recordings/Pbx.GetRecordingRepositorySettings()",
            "SetRecordingRepositorySettings": "POST /Recordings/Pbx.SetRecordingRepositorySettings",
            "GetRecordingSettings": "GET /Recordings/Pbx.GetRecordingSettings()",
            "SetRecordingSettings": "POST /Recordings/Pbx.SetRecordingSettings",
            "PurgeLocal": "POST /Recordings/Pbx.PurgeLocal",
            "PurgeArchive": "POST /Recordings/Pbx.PurgeArchive",
            "Archive": "POST /Recordings/Pbx.Archive",
            "BulkRecordingsDelete": "POST /Recordings/Pbx.BulkRecordingsDelete",
            "BulkRecordingsArchive": "POST /Recordings/Pbx.BulkRecordingsArchive",
            "GetAbandonedChatsStatisticsData": "GET /ReportAbandonedChatsStatistics/Pbx.GetAbandonedChatsStatisticsData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType})",
            "queueDnStr": "queueDnStr",
            "startDt": "startDt",
            "endDt": "endDt",
            "participantType": "participantType",
            "DownloadAbandonedChatsStatistics": "GET /ReportAbandonedChatsStatistics/Pbx.DownloadAbandonedChatsStatistics(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType},clientTimeZone={clientTimeZone})",
            "GetAbandonedQueueCallsData": "GET /ReportAbandonedQueueCalls/Pbx.GetAbandonedQueueCallsData(periodFrom={periodFrom},periodTo={periodTo},queueDns={queueDns},waitInterval={waitInterval})",
            "periodFrom": "periodFrom",
            "periodTo": "periodTo",
            "queueDns": "queueDns",
            "waitInterval": "waitInterval",
            "DownloadAbandonedQueueCalls": "GET /ReportAbandonedQueueCalls/Pbx.DownloadAbandonedQueueCalls(periodFrom={periodFrom},periodTo={periodTo},queueDns={queueDns},waitInterval={waitInterval},clientTimeZone={clientTimeZone})",
            "GetAgentLoginHistoryData": "GET /ReportAgentLoginHistory/Pbx.GetAgentLoginHistoryData(clientTimeZone={clientTimeZone},startDt={startDt},endDt={endDt},queueDnStr={queueDnStr},agentDnStr={agentDnStr})",
            "agentDnStr": "agentDnStr",
            "DownloadAgentLoginHistory": "GET /ReportAgentLoginHistory/Pbx.DownloadAgentLoginHistory(clientTimeZone={clientTimeZone},startDt={startDt},endDt={endDt},queueDnStr={queueDnStr},agentDnStr={agentDnStr})",
            "GetAgentsInQueueStatisticsData": "GET /ReportAgentsInQueueStatistics/Pbx.GetAgentsInQueueStatisticsData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "DownloadAgentsInQueueStatistics": "GET /ReportAgentsInQueueStatistics/Pbx.DownloadAgentsInQueueStatistics(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "GetAuditLogData": "GET /ReportAuditLog/Pbx.GetAuditLogData()",
            "DownloadAuditLog": "GET /ReportAuditLog/Pbx.DownloadAuditLog(clientTimeZone={clientTimeZone})",
            "GetAverageQueueWaitingTimeData": "GET /ReportAverageQueueWaitingTime/Pbx.GetAverageQueueWaitingTimeData(chartDate={chartDate},chartBy={chartBy},queueDnStr={queueDnStr},waitInterval={waitInterval},clientTimeZone={clientTimeZone})",
            "chartDate": "chartDate",
            "chartBy": "chartBy",
            "DownloadAverageQueueWaitingTimeReport": "GET /ReportAverageQueueWaitingTime/Pbx.DownloadAverageQueueWaitingTimeReport(chartDate={chartDate},chartBy={chartBy},queueDnStr={queueDnStr},waitInterval={waitInterval},clientTimeZone={clientTimeZone})",
            "GetBreachesSlaData": "GET /ReportBreachesSla/Pbx.GetBreachesSlaData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "DownloadBreachesSla": "GET /ReportBreachesSla/Pbx.DownloadBreachesSla(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval},clientTimeZone={clientTimeZone})",
            "GetCallCostByExtensionGroupData": "GET /ReportCallCostByExtensionGroup/Pbx.GetCallCostByExtensionGroupData(periodFrom={periodFrom},periodTo={periodTo},groupFilter={groupFilter},callClass={callClass})",
            "groupFilter": "groupFilter",
            "callClass": "callClass",
            "DownloadCallCostByExtensionGroup": "GET /ReportCallCostByExtensionGroup/Pbx.DownloadCallCostByExtensionGroup(periodFrom={periodFrom},periodTo={periodTo},groupFilter={groupFilter},callClass={callClass},clientTimeZone={clientTimeZone})",
            "GetCallDistributionData": "GET /ReportCallDistribution/Pbx.GetCallDistributionData(chartDate={chartDate},chartBy={chartBy},includeInternalCalls={includeInternalCalls},includeQueueCalls={includeQueueCalls},queueDnStr={queueDnStr},groupStr={groupStr},clientTimeZone={clientTimeZone},waitInterval={waitInterval})",
            "includeInternalCalls": "includeInternalCalls",
            "includeQueueCalls": "includeQueueCalls",
            "groupStr": "groupStr",
            "DownloadCallDistributionReport": "GET /ReportCallDistribution/Pbx.DownloadCallDistributionReport(chartDate={chartDate},chartBy={chartBy},includeInternalCalls={includeInternalCalls},includeQueueCalls={includeQueueCalls},queueDnStr={queueDnStr},groupStr={groupStr},clientTimeZone={clientTimeZone},waitInterval={waitInterval})",
            "GetCallLogData": "GET /ReportCallLogData/Pbx.GetCallLogData(periodFrom={periodFrom},periodTo={periodTo},sourceType={sourceType},sourceFilter={sourceFilter},destinationType={destinationType},destinationFilter={destinationFilter},callsType={callsType},callTimeFilterType={callTimeFilterType},callTimeFilterFrom={callTimeFilterFrom},callTimeFilterTo={callTimeFilterTo},hidePcalls={hidePcalls})",
            "sourceType": "sourceType",
            "sourceFilter": "sourceFilter",
            "destinationType": "destinationType",
            "destinationFilter": "destinationFilter",
            "callsType": "callsType",
            "callTimeFilterType": "callTimeFilterType",
            "callTimeFilterFrom": "callTimeFilterFrom",
            "callTimeFilterTo": "callTimeFilterTo",
            "hidePcalls": "hidePcalls",
            "DownloadCallLog": "GET /ReportCallLogData/Pbx.DownloadCallLog(periodFrom={periodFrom},periodTo={periodTo},sourceType={sourceType},sourceFilter={sourceFilter},destinationType={destinationType},destinationFilter={destinationFilter},callsType={callsType},callTimeFilterType={callTimeFilterType},callTimeFilterFrom={callTimeFilterFrom},callTimeFilterTo={callTimeFilterTo},hidePcalls={hidePcalls},clientTimeZone={clientTimeZone})",
            "GetCallQualityReport": "GET /ReportCallLogData/Pbx.GetCallQualityReport(call_id={call_id},srcNumber={srcNumber},dstNumber={dstNumber},srcCallerId={srcCallerId},dstCallerId={dstCallerId})",
            "callId": "call_id",
            "srcNumber": "srcNumber",
            "dstNumber": "dstNumber",
            "srcCallerId": "srcCallerId",
            "dstCallerId": "dstCallerId",
            "GetDetailedQueueStatisticsData": "GET /ReportDetailedQueueStatistics/Pbx.GetDetailedQueueStatisticsData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "DownloadDetailedQueueStatistics": "GET /ReportDetailedQueueStatistics/Pbx.DownloadDetailedQueueStatistics(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "GetExtensionsStatisticsByRingGroupsData": "GET /ReportExtensionsStatisticsByRingGroups/Pbx.GetExtensionsStatisticsByRingGroupsData(periodFrom={periodFrom},periodTo={periodTo},ringGroupDns={ringGroupDns})",
            "ringGroupDns": "ringGroupDns",
            "DownloadExtensionsStatisticsByRingGroups": "GET /ReportExtensionsStatisticsByRingGroups/Pbx.DownloadExtensionsStatisticsByRingGroups(periodFrom={periodFrom},periodTo={periodTo},ringGroupDns={ringGroupDns})",
            "GetExtensionStatisticsByGroupData": "GET /ReportExtensionStatisticsByGroup/Pbx.GetExtensionStatisticsByGroupData(groupNumber={groupNumber},periodFrom={periodFrom},periodTo={periodTo},callArea={callArea})",
            "groupNumber": "groupNumber",
            "callArea": "callArea",
            "DownloadExtensionStatisticsByGroup": "GET /ReportExtensionStatisticsByGroup/Pbx.DownloadExtensionStatisticsByGroup(groupNumber={groupNumber},periodFrom={periodFrom},periodTo={periodTo},callArea={callArea})",
            "GetExtensionStatisticsData": "GET /ReportExtensionStatistics/Pbx.GetExtensionStatisticsData(periodFrom={periodFrom},periodTo={periodTo},extensionFilter={extensionFilter},callArea={callArea})",
            "extensionFilter": "extensionFilter",
            "DownloadExtensionStatistics": "GET /ReportExtensionStatistics/Pbx.DownloadExtensionStatistics(periodFrom={periodFrom},periodTo={periodTo},extensionFilter={extensionFilter},callArea={callArea})",
            "ListReportGroup": "GET /ReportGroup",
            "GetInboundRulesData": "GET /ReportInboundRules/Pbx.GetInboundRulesData()",
            "DownloadInboundRules": "GET /ReportInboundRules/Pbx.DownloadInboundRules()",
            "GetQueueAgentsChatStatisticsData": "GET /ReportQueueAgentsChatStatistics/Pbx.GetQueueAgentsChatStatisticsData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType})",
            "DownloadQueueAgentsChatStatistics": "GET /ReportQueueAgentsChatStatistics/Pbx.DownloadQueueAgentsChatStatistics(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType})",
            "GetQueueAgentsChatStatisticsTotalsData": "GET /ReportQueueAgentsChatStatisticsTotals/Pbx.GetQueueAgentsChatStatisticsTotalsData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType})",
            "DownloadQueueAgentsChatStatisticsTotals": "GET /ReportQueueAgentsChatStatisticsTotals/Pbx.DownloadQueueAgentsChatStatisticsTotals(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType})",
            "GetQueueAnsweredCallsByWaitTimeData": "GET /ReportQueueAnsweredCallsByWaitTime/Pbx.GetQueueAnsweredCallsByWaitTimeData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},answerInterval={answerInterval})",
            "answerInterval": "answerInterval",
            "DownloadQueueAnsweredCallsByWaitTime": "GET /ReportQueueAnsweredCallsByWaitTime/Pbx.DownloadQueueAnsweredCallsByWaitTime(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},answerInterval={answerInterval},clientTimeZone={clientTimeZone})",
            "GetQueueAnUnCallsData": "GET /ReportQueueAnUnCalls/Pbx.GetQueueAnUnCallsData(chartDate={chartDate},chartBy={chartBy},queueDnStr={queueDnStr},clientTimeZone={clientTimeZone},waitInterval={waitInterval})",
            "DownloadQueueAnUnCallsReport": "GET /ReportQueueAnUnCalls/Pbx.DownloadQueueAnUnCallsReport(chartDate={chartDate},chartBy={chartBy},queueDnStr={queueDnStr},clientTimeZone={clientTimeZone},waitInterval={waitInterval})",
            "GetQueueCallbacksData": "GET /ReportQueueCallbacks/Pbx.GetQueueCallbacksData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt})",
            "DownloadQueueCallbacks": "GET /ReportQueueCallbacks/Pbx.DownloadQueueCallbacks(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt})",
            "GetQueueChatPerformanceData": "GET /ReportQueueChatPerformance/Pbx.GetQueueChatPerformanceData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType})",
            "DownloadQueueChatPerformance": "GET /ReportQueueChatPerformance/Pbx.DownloadQueueChatPerformance(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},participantType={participantType})",
            "GetQueueFailedCallbacksData": "GET /ReportQueueFailedCallbacks/Pbx.GetQueueFailedCallbacksData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt})",
            "DownloadQueueFailedCallbacks": "GET /ReportQueueFailedCallbacks/Pbx.DownloadQueueFailedCallbacks(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},clientTimeZone={clientTimeZone})",
            "GetQueuePerformanceOverviewData": "GET /ReportQueuePerformanceOverview/Pbx.GetQueuePerformanceOverviewData(periodFrom={periodFrom},periodTo={periodTo},queueDns={queueDns},waitInterval={waitInterval})",
            "DownloadQueuePerformanceOverview": "GET /ReportQueuePerformanceOverview/Pbx.DownloadQueuePerformanceOverview(periodFrom={periodFrom},periodTo={periodTo},queueDns={queueDns},waitInterval={waitInterval})",
            "GetQueuePerformanceTotalsData": "GET /ReportQueuePerformanceTotals/Pbx.GetQueuePerformanceTotalsData(periodFrom={periodFrom},periodTo={periodTo},queueDns={queueDns},waitInterval={waitInterval})",
            "DownloadQueuePerformanceTotals": "GET /ReportQueuePerformanceTotals/Pbx.DownloadQueuePerformanceTotals(periodFrom={periodFrom},periodTo={periodTo},queueDns={queueDns},waitInterval={waitInterval})",
            "GetRingGroupStatisticsData": "GET /ReportRingGroupStatistics/Pbx.GetRingGroupStatisticsData(periodFrom={periodFrom},periodTo={periodTo},ringGroupDns={ringGroupDns})",
            "DownloadRingGroupStatistics": "GET /ReportRingGroupStatistics/Pbx.DownloadRingGroupStatistics(periodFrom={periodFrom},periodTo={periodTo},ringGroupDns={ringGroupDns})",
            "GetStatisticSlaData": "GET /ReportStatisticSla/Pbx.GetStatisticSlaData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "DownloadStatisticSla": "GET /ReportStatisticSla/Pbx.DownloadStatisticSla(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "GetTeamQueueGeneralStatisticsData": "GET /ReportTeamQueueGeneralStatistics/Pbx.GetTeamQueueGeneralStatisticsData(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "DownloadTeamQueueGeneralStatistics": "GET /ReportTeamQueueGeneralStatistics/Pbx.DownloadTeamQueueGeneralStatistics(queueDnStr={queueDnStr},startDt={startDt},endDt={endDt},waitInterval={waitInterval})",
            "GetUserActivityData": "GET /ReportUserActivity/Pbx.GetUserActivityData(chartDate={chartDate},chartBy={chartBy},includeInternalCalls={includeInternalCalls},includeQueueCalls={includeQueueCalls},queueDnStr={queueDnStr},clientTimeZone={clientTimeZone},waitInterval={waitInterval})",
            "DownloadUserActivityReport": "GET /ReportUserActivity/Pbx.DownloadUserActivityReport(chartDate={chartDate},chartBy={chartBy},includeInternalCalls={includeInternalCalls},includeQueueCalls={includeQueueCalls},queueDnStr={queueDnStr},clientTimeZone={clientTimeZone},waitInterval={waitInterval})",
            "ListScheduledReport": "GET /ScheduledReports",
            "CreateScheduledReport": "POST /ScheduledReports",
            "GetScheduledReport": "GET /ScheduledReports({Id})",
            "UpdateScheduledReport": "PATCH /ScheduledReports({Id})",
            "DeleteScheduledReport": "DELETE /ScheduledReports({Id})",
            "ListRingGroupMembers": "GET /RingGroups({Id})/Members",
            "GetFirstAvailableRingGroupNumber": "GET /RingGroups/Pbx.GetFirstAvailableRingGroupNumber()",
            "GetRingGroupByNumber": "GET /RingGroups/Pbx.GetByNumber(number={number})",
            "ListRingGroup": "GET /RingGroups",
            "CreateRingGroup": "POST /RingGroups",
            "GetRingGroup": "GET /RingGroups({Id})",
            "UpdateRingGroup": "PATCH /RingGroups({Id})",
            "DeleteRingGroup": "DELETE /RingGroups({Id})",
            "GetSbc": "GET /Sbcs({Name})",
            "UpdateSbc": "PATCH /Sbcs({Name})",
            "DeleteSbc": "DELETE /Sbcs({Name})",
            "ListSbc": "GET /Sbcs",
            "CreateSbc": "POST /Sbcs",
            "GetSecureSipSettings": "GET /SecureSipSettings",
            "UpdateSecureSipSettings": "PATCH /SecureSipSettings",
            "ListSecurityRefreshToken": "GET /SecurityTokens",
            "RevokeSecurityToken": "POST /SecurityTokens({Id})/Pbx.RevokeToken",
            "ListServiceInfo": "GET /Services",
            "GarbageCollect": "POST /Services/Pbx.GarbageCollect",
            "Start": "POST /Services/Pbx.Start",
            "Stop": "POST /Services/Pbx.Stop",
            "Enable": "POST /Services/Pbx.Enable",
            "Disable": "POST /Services/Pbx.Disable",
            "Restart": "POST /Services/Pbx.Restart",
            "RestartAll": "POST /Services/Pbx.RestartAll",
            "RestartOperatingSystem": "POST /Services/Pbx.RestartOperatingSystem",
            "ListSipDevice": "GET /SipDevices",
            "GetDirectoryInfo": "POST /GetDirectoryInfo",
            "GetSystemStatus": "GET /SystemStatus",
            "SystemExtensions": "GET /SystemStatus/Pbx.SystemExtensions()",
            "SystemDatabaseInformation": "GET /SystemStatus/Pbx.SystemDatabaseInformation()",
            "GetVersionType": "GET /SystemStatus/Pbx.GetVersionType()",
            "SetChatLogStatus": "POST /SystemStatus/Pbx.SetChatLogStatus",
            "StartDBMaintenance": "POST /SystemStatus/Pbx.StartDBMaintenance",
            "SystemHealthStatus": "GET /SystemStatus/Pbx.SystemHealthStatus()",
            "APIToken": "GET /SystemStatus/Pbx.APIToken()",
            "SetMultiCompanyMode": "POST /SystemStatus/Pbx.SetMultiCompanyMode",
            "ListProperty": "GET /TenantProperties",
            "CreateProperty": "POST /TenantProperties",
            "GetProperty": "GET /TenantProperties({Name})",
            "UpdateProperty": "PATCH /TenantProperties({Name})",
            "DeleteProperty": "DELETE /TenantProperties({Name})",
            "GetFirstAvailableTrunkNumber": "GET /Trunks/Pbx.GetFirstAvailableTrunkNumber()",
            "GetTrunk": "GET /Trunks({Id})",
            "UpdateTrunk": "PATCH /Trunks({Id})",
            "DeleteTrunk": "DELETE /Trunks({Id})",
            "InitMasterBridge": "GET /Trunks/Pbx.InitMasterBridge()",
            "InitSlaveBridge": "GET /Trunks/Pbx.InitSlaveBridge()",
            "InitTrunk": "GET /Trunks/Pbx.InitTrunk(template={template})",
            "template": "template",
            "ExportTrunk": "GET /Trunks({Id})/Pbx.ExportTrunk()",
            "RefreshRegistration": "POST /Trunks/Pbx.RefreshRegistration",
            "SetRoutes": "POST /Trunks/Pbx.SetRoutes",
            "GetTrunkByNumber": "GET /Trunks/Pbx.GetTrunkByNumber(number={number})",
            "ListTrunk": "GET /Trunks",
            "CreateTrunk": "POST /Trunks",
            "ProvisionTrunk": "POST /Trunks/Pbx.ProvisionTrunk",
            "TelegramSession": "POST /Trunks/Pbx.TelegramSession",
            "ListTrunkTemplate": "GET /TrunkTemplates",
            "CreateTrunkTemplate": "POST /TrunkTemplates",
            "GetTrunkTemplate": "GET /TrunkTemplates({Id})",
            "UpdateTrunkTemplate": "PATCH /TrunkTemplates({Id})",
            "DeleteTrunkTemplate": "DELETE /TrunkTemplates({Id})",
            "GetUpdateSettings": "GET /GetUpdateSettings()",
            "SetUpdateSettings": "POST /SetUpdateSettings",
            "HasDebianUpgrade": "GET /HasDebianUpgrade()",
            "UpgradeDebian": "POST /UpgradeDebian",
            "GetUpdates": "GET /GetUpdates()",
            "GetPromptSetUpdates": "GET /GetPromptSetUpdates()",
            "GetClientCrmUpdates": "GET /GetClientCrmUpdates()",
            "GetServerCrmUpdates": "GET /GetServerCrmUpdates()",
            "InstallUpdates": "POST /InstallUpdates",
            "GetUpdatesStats": "GET /GetUpdatesStats()",
            "HasDuplicatedEmail": "GET /Users({Id})/Pbx.HasDuplicatedEmail()",
            "GetDuplicatedEmails": "POST /Users/Pbx.GetDuplicatedEmails",
            "GetFirstAvailableExtensionNumber": "GET /Users/Pbx.GetFirstAvailableExtensionNumber()",
            "GetFirstAvailableHotdeskingNumber": "GET /Users/Pbx.GetFirstAvailableHotdeskingNumber()",
            "SendWelcomeEmail": "POST /Users({Id})/Pbx.SendWelcomeEmail",
            "ListGroups": "GET /Users({Id})/Groups",
            "ListForwardingProfiles": "GET /Users({Id})/ForwardingProfiles",
            "GetPhoneSecret": "GET /Users({Id})/Pbx.GetPhoneSecret()",
            "Regenerate": "POST /Users({Id})/Pbx.Regenerate",
            "RegeneratePasswords": "POST /Users/Pbx.RegeneratePasswords",
            "ExportExtensions": "GET /Users/Pbx.ExportExtensions()",
            "GetPhoneRegistrar": "GET /Users/Pbx.GetPhoneRegistrar(mac={mac})",
            "mac": "mac",
            "BulkUpdate": "POST /Users/Pbx.BulkUpdate",
            "GetPhoneRegistrars": "POST /Users/Pbx.GetPhoneRegistrars",
            "RebootPhone": "POST /Users/Pbx.RebootPhone",
            "ReprovisionPhone": "POST /Users/Pbx.ReprovisionPhone",
            "UpgradePhone": "POST /Users/Pbx.UpgradePhone",
            "GenerateProvLink": "GET /Users({Id})/Pbx.GenerateProvLink()",
            "GetUser": "GET /Users({Id})",
            "UpdateUser": "PATCH /Users({Id})",
            "DeleteUser": "DELETE /Users({Id})",
            "ListGreetings": "GET /Users({Id})/Greetings",
            "MakeCallUserRecordGreeting": "POST /Users({Id})/Pbx.MakeCallUserRecordGreeting",
            "DownloadGreeting": "GET /Users/Pbx.DownloadGreeting(userId={userId},fileName={fileName})",
            "userId": "userId",
            "BatchDelete": "POST /Users/Pbx.BatchDelete",
            "GetMonitorStatus": "GET /Users/Pbx.GetMonitorStatus()",
            "SetMonitorStatus": "POST /Users({Id})/Pbx.SetMonitorStatus",
            "GetUserByNumber": "GET /Users/Pbx.GetByNumber(number={number})",
            "ListUser": "GET /Users",
            "CreateUser": "POST /Users",
            "GetTranscribeLanguages": "GET /VoicemailSettings/Pbx.GetTranscribeLanguages()",
            "GetVoicemailSettings": "GET /VoicemailSettings",
            "UpdateVoicemailSettings": "PATCH /VoicemailSettings",
            "DeleteAllUserVoicemails": "POST /VoicemailSettings/Pbx.DeleteAllUserVoicemails",
            "ListWeblink": "GET /WebsiteLinks",
            "CreateWeblink": "POST /WebsiteLinks",
            "ValidateLink": "POST /WebsiteLinks/Pbx.ValidateLink",
            "BulkLinksDelete": "POST /WebsiteLinks/Pbx.BulkLinksDelete",
            "GetWeblink": "GET /WebsiteLinks({Link})",
            "link": "Link",
            "UpdateWeblink": "PATCH /WebsiteLinks({Link})",
            "DeleteWeblink": "DELETE /WebsiteLinks({Link})",
            "optionalParameters": "可选项"
        }
    }
}